-- node abc(in1: int) returns (out1: int);
-- var t1, t2:int;
-- let
--   (t1, t2, out1) = (xyz(in1, in1), in1);
-- tel

-- node abc(in1: int) returns (out1: int);
-- var t1, t2:int;
-- let
--   x = true;
--   y = 10.2;
--   z = 20;
--   a = z when x;
--   b = z when not x;
--   c = merge x (true -> a) (false -> c);
--   d = if x then b else c;
--   e = true fby false;
--   f = xyz(d,e,f);
-- tel

node mkTup(a: int) returns (b, c: int);
let
  b = a;
  c = a;
tel

node callTup(d: int) returns(e, f, g: int);
let
  (e, f, g) = (mkTup(e), e);
tel